// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id                String     @id @default(auto()) @map("_id") @db.ObjectId
  email             String     @unique
  password          String
  publicAddress     String     @unique
  items             Item[]     @relation(fields: [itemsIds], references: [id])
  itemsIds          String[]   @db.ObjectId
  createdAt         DateTime   @default(now())
  sentTransfers     Transfer[] @relation(name: "sentTransfers")
  receivedTransfers Transfer[] @relation(name: "receivedTransfers")
}

model Item {
  id              String     @id @default(auto()) @map("_id") @db.ObjectId
  contractAddress String
  tokenId         String     @unique
  ownerAddress    String
  owner           User[]     @relation(fields: [ownerId], references: [id])
  ownerId         String[]   @db.ObjectId
  createdAt       DateTime   @default(now())
  updatedAt       DateTime   @updatedAt
  transfers       Transfer[]
}

model Transfer {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  item        Item     @relation(fields: [itemId], references: [id])
  itemId      String   @db.ObjectId
  from        String
  to          String
  fromUser    User?    @relation(name: "sentTransfers", fields: [fromUserId], references: [id])
  fromUserId  String?  @db.ObjectId
  toUser      User?    @relation(name: "receivedTransfers", fields: [toUserId], references: [id])
  toUserId    String?  @db.ObjectId
  blockNumber Int
  blockHash   String
  txHash      String
  createdAt   DateTime @default(now())
}

model RevokedToken {
  id        String    @id @default(auto()) @map("_id") @db.ObjectId
  jti       String    @unique
  expiresAt DateTime?
  createdAt DateTime  @default(now())
}
